---
title: "Predicting Default Probability on Credit Card Payments"
author: "Pamela De Vera"
date: "12/20/2020"
output: pdf_document
---

```{r setup, include=FALSE, message=FALSE, echo=FALSE}

# Please set working directory to Source file location and keep r-code file and csv in the same folder.

# Download the following packages if not already installed by removing its corresponding comments

# install.packages("tidyverse")
# install.packages("lme4")
# install.packages("gridExtra")

# Libraries used in this analysis
library(tidyverse)
library(lme4)
library(gridExtra)

################################################################################

# Data Cleaning

# Load csv file
defaultdata <- readr::read_csv("UCI_Credit_Card.csv")

# Select predictor variables
defaultdata <- defaultdata %>%
  dplyr::select(SEX, EDUCATION, AGE, default.payment.next.month, PAY_0, BILL_AMT1 )

# Fix assigned sex values to 0 and 1 (1 = male)
defaultdata <- defaultdata %>%
  mutate(SEX = 
           ifelse(SEX == 1, 1, 0))

# Filter out education level listed as other
defaultdata <- defaultdata %>%
  filter(EDUCATION == 1 | EDUCATION == 2 | EDUCATION == 3) 

# Merge all values representing a payment made on time
defaultdata <- defaultdata %>%
  mutate(PAY_0 =
           ifelse(PAY_0==-2|PAY_0==-1, 0, PAY_0))

defaultT <- defaultdata %>%
  filter(default.payment.next.month == 1)

defaultF <- defaultdata %>%
  filter(default.payment.next.month == 0)

# Baseline characteristics for total, default, and not default
## Total
agesum <- summary(defaultdata$AGE)
sexsum <- summary(defaultdata$SEX)
edusum <- summary(defaultdata$EDUCATION)
paysum <- summary(defaultdata$PAY_0)
billsum <- summary(defaultdata$BILL_AMT1)

## Defaulted payments
ageTsum <- summary(defaultT$AGE)
sexTsum <- summary(defaultT$SEX)
eduTsum <- summary(defaultT$EDUCATION)
payTsum <- summary(defaultT$PAY_0)
billTsum <- summary(defaultT$BILL_AMT1)

## Have not defaulted payments
ageFsum <- summary(defaultF$AGE)
sexFsum <- summary(defaultF$SEX)
eduFsum <- summary(defaultF$EDUCATION)
payFsum <- summary(defaultF$PAY_0)
billFsum <- summary(defaultF$BILL_AMT1)


################################################################################

# Graphs

# Change education and sex to categorical variables for graphs
defaultdata <- defaultdata %>%
  mutate(EDUCATION =
           ifelse(EDUCATION == 1, "Grad School", 
                  ifelse(EDUCATION == 2, "University","High School")))

defaultdata <- defaultdata %>%
  mutate(SEX = 
           ifelse(SEX == 0, "Female", "Male"))

# Histograms/Bar graphs for variables
agep <- ggplot(data=defaultdata, aes(x=AGE, fill=as.factor(default.payment.next.month))) 
  + geom_histogram() +theme(legend.position = "none") + labs(x="Age (years)", y="Count")
sexp <- ggplot(data=defaultdata, aes(x=SEX, fill=as.factor(default.payment.next.month))) 
  + geom_bar() +theme(legend.title = element_blank())+labs(x="Sex", y="Count")
edup <- ggplot(data=defaultdata, aes(x=EDUCATION, fill=as.factor(default.payment.next.month))) 
  + geom_bar() +theme(legend.position = "none")+labs(x="Education Level", y="Count")
payp <- ggplot(data=defaultdata, aes(x=PAY_0, fill=as.factor(default.payment.next.month))) 
  + geom_bar() +theme(legend.position = "none")+labs(x="Months Past Due on Payment", y="Count")
billp <- ggplot(data=defaultdata, aes(x=BILL_AMT1, fill=as.factor(default.payment.next.month))) 
  + geom_histogram() +theme(legend.position = "none")+labs(x="Latest Bill Statement", y="Count")

# Graph layout on pdf
grid.arrange(agep, billp, payp, edup, sexp, nrow=3, ncol=2, 
  top = "Distribution of Predictor Variables", bottom = "Figure 1: 0 = Not default, 1 = Default")


################################################################################

# Logistic Model

# Model
defaultmodel <- glm(default.payment.next.month ~ AGE + as.factor(SEX) + as.factor(EDUCATION) 
  + PAY_0 + BILL_AMT1, family = binomial, data = defaultdata)

# Model summary
model_est <- coef(summary(defaultmodel))[,1]
model_se <- coef(summary(defaultmodel))[,2]
model_zval <- coef(summary(defaultmodel))[,3]
model_pval <- coef(summary(defaultmodel))[,4]

################################################################################

# Goodness-of-fit

pchisq(defaultmodel$deviance, defaultmodel$df.residual)
